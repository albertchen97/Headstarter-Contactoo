// This is the home page
import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import {
  mainLogo,
  splashBG,
  magnifyGlass,
  smsLogo,
  emailLogo,
} from "../public/imageIndex";
import Chat from "../components/Chat";
import { API, Auth, withSSRContext, graphqlOperation } from "aws-amplify";

// export default function Home() {
export default function Home({ messages }) {
  // state and function for toggling live chat
  const [showChat, toggleShowChat] = useState(false);

  const handleShowChat = () => {
    //
    toggleShowChat(showChat ? false : true);
  };

  return (
    <div>
      <Head>
        <title>Contactoo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Main Body */}
      <main className="flex flex-col items-center w-screen text-xl md:text-2xl">
        {/* Nav Bar with title + sign in, the bar will stick to the top of the screen*/}
        <nav className="sticky top-0 z-20 flex items-center justify-center w-full h-16 bg-white md:h-24">
          <div className="flex items-center justify-between w-11/12 md:w-5/6 max-w-7xl">
            {/* logo and title */}
            <div className="flex gap-2">
              <Image src={mainLogo} />
              <h1 className="text-3xl font-bold md:text-5xl">Contactoo</h1>
            </div>

            {/* sign in button */}
            <button className="flex items-center justify-center h-10 p-3 text-white bg-black hover:bg-cyan-300 md:h-12 md:p-5 rounded-2xl">
              Sign In
            </button>
          </div>
        </nav>

        {/* Middle section with welcome message + search bar */}
        <div className="relative flex items-center justify-center w-full h-64 md:h-80">
          <Image
            className="object-cover"
            src={splashBG}
            layout="fill"
            draggable="false"
          />
          <div className="z-10 flex flex-col items-center justify-center w-4/5 max-w-3xl gap-3 whitespace-nowrap md:w-1/2 md:gap-6 ">
            <h1 className="text-3xl font-bold md:text-5xl">
              Contactoo Support
            </h1>
            <h1 className="text-3xl md:text-5xl">How can we help?</h1>

            {/* search bar container */}
            <form className="w-full h-full" action="">
              <div className="relative flex flex-col justify-center item-center">
                {/* magnifying glass */}
                <div className="absolute w-10 h-10 md:w-12 md:h-12 right-3">
                  <Image src={magnifyGlass} layout="fill"></Image>
                </div>

                {/* actually search bar */}
                <input
                  className="w-full pl-5 pr-16 h-14 md:h-16 rounded-2xl"
                  type={"text"}
                  placeholder="Search for help"></input>
              </div>
            </form>
          </div>
        </div>

        {/* Bottom tiles for picking service type */}
        <div className="flex flex-wrap justify-center w-11/12 gap-5 md:flex-nowrap md:w-3/4 mt-11 md:mt-14">
          {/* SMS tile */}
          <a
            className="flex flex-col items-center justify-center max-w-md p-8 border border-gray-500 hover:border-cyan-500 hover:text-cyan-500 md:p-10 w-72 h-72 md:h-96 md:w-96 rounded-2xl"
            href="http://localhost:3000/sms">
            <Image src={smsLogo} />
            <p>Message us regarding your questions, comments, or concerns.</p>
          </a>

          {/* Email tile */}
          <a
            className="flex flex-col items-center justify-center max-w-md p-8 border border-gray-500 hover:border-cyan-500 hover:text-cyan-500 md:p-10 w-72 h-72 md:h-96 md:w-96 rounded-2xl"
            href="http://localhost:3000/email">
            <Image src={emailLogo} />
            <p>Email us regarding your questions, comments, or concerns.</p>
          </a>
        </div>

        {/* Live Chat Toggle */}
        <button
          className={
            "fixed bottom-0 right-0 flex items-center h-10 pl-5 pr-5 text-xl transition-all text-white bg-black md:right-5 md:h-16 md:text-3xl " +
            (showChat ? "bg-zinc-500" : "")
          }
          onClick={handleShowChat}>
          Live Chat
        </button>

        {/* Live Chat Window */}
        <div
          className={
            (showChat ? "" : "translate-y-full invisible") +
            "  border-gray-500 border-2 z-30 right-0 md:right-5 fixed md:bottom-16 bottom-10 w-80 h-96 transition-all"
          }>
          <Chat messages={messages} />
        </div>
      </main>
    </div>
  );
}

// Server-side rendering, only use in pages and not components, used to get db messages to pass into CHAT component
export async function getServerSideProps({ req }) {
  // wrap the request in a withSSRContext to use Amplify functionality serverside.
  const SSR = withSSRContext({ req });

  try {
    // currentAuthenticatedUser() will throw an error if the user is not signed in.
    const user = await SSR.Auth.currentAuthenticatedUser();

    // If we make it passed the above line, that means the user is signed in.
    const response = await SSR.API.graphql({
      query: listMessages,
      // use authMode: AMAZON_COGNITO_USER_POOLS to make a request on the current user's behalf
      authMode: "AMAZON_COGNITO_USER_POOLS",
    });

    // return all the messages from the dynamoDB
    return {
      props: {
        messages: response.data.listMessages.items,
      },
    };
  } catch (error) {
    // We will end up here if there is no user signed in.
    // We'll just return a list of empty messages.
    return {
      props: {
        messages: [],
      },
    };
  }
}
